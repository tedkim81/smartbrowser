package com.teuskim.sbrowser;import twitter4j.auth.AccessToken;import android.app.Activity;import android.app.ProgressDialog;import android.content.Intent;import android.os.AsyncTask;import android.os.Bundle;import android.text.InputType;import android.text.method.PasswordTransformationMethod;import android.view.KeyEvent;import android.view.View;import android.view.View.OnClickListener;import android.view.inputmethod.EditorInfo;import android.widget.Button;import android.widget.CheckBox;import android.widget.EditText;import android.widget.TextView;import android.widget.TextView.OnEditorActionListener;import android.widget.Toast;public class TwitterLoginActivity extends Activity implements OnEditorActionListener{		private EditText mLoginIdEditText;	private EditText mLoginPasswordEditTextFirst;	private EditText mLoginPasswordEditTextSecond;	private Button mLoginButton;	private CheckBox mPassCheck;		private MiscPref mPref;	private boolean isInputModePass;		private String mId;	private String mPass;	private ProgressDialog mProgressDialog;		@Override	public void onCreate(Bundle savedInstanceState) {				super.onCreate(savedInstanceState);		setContentView(R.layout.twitter_login);				mPref = MiscPref.getInstance(getApplicationContext());				isInputModePass = false;				mLoginIdEditText = (EditText)findViewById(R.id.setting_twitter_login_id_text);		mLoginPasswordEditTextFirst = (EditText)findViewById(R.id.setting_twitter_login_password_text_first);		mLoginPasswordEditTextSecond = (EditText)findViewById(R.id.setting_twitter_login_password_text_second);		mLoginButton = (Button)findViewById(R.id.setting_twitter_login_login_button);		mPassCheck = (CheckBox)findViewById(R.id.setting_twitter_login_password_check);				mLoginPasswordEditTextFirst.setOnEditorActionListener(this);		mLoginPasswordEditTextSecond.setOnEditorActionListener(this);				mLoginButton.setOnClickListener(new OnClickListener() {						@Override			public void onClick(View view) {				login();			}		});				mPassCheck.setOnClickListener(new View.OnClickListener() {			public void onClick(View v) {								if (mPassCheck.isChecked()) {					isInputModePass = true;					mLoginPasswordEditTextFirst.setVisibility(View.INVISIBLE);					mLoginPasswordEditTextSecond.setVisibility(View.VISIBLE);					mLoginPasswordEditTextFirst.setTransformationMethod(new PasswordTransformationMethod());					mLoginPasswordEditTextSecond.setText(mLoginPasswordEditTextFirst.getText().toString());					mLoginPasswordEditTextSecond.setFocusable(true);					mLoginPasswordEditTextSecond.requestFocus();					mLoginPasswordEditTextSecond.setInputType(InputType.TYPE_TEXT_VARIATION_PASSWORD);				}				else {					isInputModePass = false;					mLoginPasswordEditTextFirst.setVisibility(View.VISIBLE);					mLoginPasswordEditTextSecond.setVisibility(View.INVISIBLE);					mLoginPasswordEditTextFirst.setText(mLoginPasswordEditTextSecond.getText().toString());					mLoginPasswordEditTextFirst.setTransformationMethod(new PasswordTransformationMethod());					mLoginPasswordEditTextFirst.setFocusable(true);					mLoginPasswordEditTextFirst.requestFocus();					mLoginPasswordEditTextFirst.setInputType(InputType.TYPE_TEXT_VARIATION_PASSWORD);				}			}		});			}		private void login(){		mId = mLoginIdEditText.getText().toString();		if(isInputModePass)			mPass = mLoginPasswordEditTextSecond.getText().toString();		else			mPass = mLoginPasswordEditTextFirst.getText().toString();		LoginTwitterTask loginTask = new LoginTwitterTask();				try{			mProgressDialog = ProgressDialog.show(this, "", "Loading");		}catch(Exception e){}				loginTask.execute(mId, mPass);	}		@Override	public boolean onKeyDown(int keyCode, KeyEvent event) {		switch (keyCode) {		case KeyEvent.KEYCODE_BACK:			setResult(RESULT_CANCELED);			finish();		break;				default :			return super.onKeyDown(keyCode, event);		}		return false;	}	@Override	public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {		if ((actionId == EditorInfo.IME_ACTION_DONE) || (event != null && event.getKeyCode() == KeyEvent.KEYCODE_ENTER))			login();		return false;	}		private class LoginTwitterTask extends AsyncTask<String, Integer, AccessToken> {				private TwitterApi mTwitterApi;				public LoginTwitterTask(){			mTwitterApi = new TwitterApi();		}				@Override		protected AccessToken doInBackground(String... params) {			String usrid = params[0];			String passwd = params[1];						return mTwitterApi.auth(usrid, passwd);		}		@Override		protected void onPostExecute(AccessToken result) {			try{				mProgressDialog.dismiss();			}catch(Exception e){}										if(result != null){				mPref.saveTwitter(mId, mPass, result);				Intent intent = new Intent();				setResult(RESULT_OK, intent);				finish();				Toast.makeText(getBaseContext(), R.string.twitter_login_ok, Toast.LENGTH_SHORT).show();			}			else{				mLoginPasswordEditTextFirst.setText(null);				mLoginPasswordEditTextSecond.setText(null);				Toast.makeText(getBaseContext(), R.string.twitter_login_fail, Toast.LENGTH_SHORT).show();			}		}	}}