package com.teuskim.sbrowser;import java.io.IOException;import java.io.UnsupportedEncodingException;import java.net.URLDecoder;import java.net.URLEncoder;import org.apache.http.client.ClientProtocolException;import org.apache.http.client.ResponseHandler;import org.apache.http.client.methods.HttpGet;import org.apache.http.impl.client.BasicResponseHandler;import org.json.JSONException;import org.json.JSONObject;import twitter4j.Twitter;import twitter4j.TwitterException;import twitter4j.TwitterFactory;import twitter4j.auth.AccessToken;import twitter4j.auth.OAuthAuthorization;import twitter4j.conf.Configuration;import twitter4j.conf.ConfigurationBuilder;public class TwitterApi {	final String consumerKey = "Your consumer key";	final String consumerSecret = "Your consumer secret";	final Configuration config;	public TwitterApi() {				ConfigurationBuilder builder = new ConfigurationBuilder();		builder.setOAuthConsumerKey(consumerKey);		builder.setOAuthConsumerSecret(consumerSecret);				config = builder.build();			}		public AccessToken auth(String name, String password){				OAuthAuthorization auth = new OAuthAuthorization(config);		try {						AccessToken token = auth.getOAuthAccessToken(name, password);						if( token != null)				return token;					} catch (TwitterException e1) {						Log.e(getClass().getSimpleName(), "TwitterException: " + e1.getMessage());		}				return null;			}		public boolean updateStatus(String token, String secret, String statusText){//		if (statusText.length() > 160)//			throw new IllegalArgumentException(//					"Status text must be 160 characters or less: "//					+ statusText.length());		AccessToken atoken = new AccessToken(token, secret);		Twitter twitter = new TwitterFactory(config).getInstance(atoken);		try {						twitter.updateStatus(statusText);			return true;					} catch (TwitterException e) {			Log.e(getClass().getSimpleName(), "TwitterException : " +  e.getMessage());		}				return false;	}		final String mShortenApi = "http://api.bit.ly/v3/shorten?login=neowiz&apiKey=R_e892311572797d754917875310215752&format=json&longUrl=";	public String shorten(String longUrl){				String url = mShortenApi + URLEncoder.encode(longUrl);		HttpGet get = new HttpGet(url);		get.setHeader("Content-type","application/x-www-form-urlencoded");			ResponseHandler<String> responseHander = new BasicResponseHandler();				try {						String result = (String) HttpManager.execute(get,responseHander);			if( result == null)				return null;						JSONObject json = new JSONObject(result);			if(json == null)				return null;						if( json.getInt("status_code") == 200){								JSONObject data = json.getJSONObject("data");								String tmpUrl = data.getString("url");				if( tmpUrl != null)					return URLDecoder.decode(tmpUrl);			}					} catch (UnsupportedEncodingException e) {			Log.e(getClass().getSimpleName(), e.getClass().getSimpleName() + e.getMessage());		} catch (ClientProtocolException e) {			Log.e(getClass().getSimpleName(), e.getClass().getSimpleName() + e.getMessage());		} catch (IOException e) {			Log.e(getClass().getSimpleName(), e.getClass().getSimpleName() + e.getMessage());		} catch (JSONException e) {			Log.e(getClass().getSimpleName(), e.getClass().getSimpleName() + e.getMessage());		}				return null;				}}